Parameters:
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
  AppId:
    Description: Id of the Application
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ""
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: "sts.amazonaws.com"
    Type: String

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:
  DeployerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      Policies:
        - PolicyName: DelegateToCloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt CloudFormationExecutionRole.Arn
                Effect: Allow
        - PolicyName: ServerlessFrameworkCli
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: ValidateCloudFormation
                Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: '*'
              - Sid: ServerlessTransforms
                Effect: Allow
                Action:
                 - "cloudformation:CreateChangeSet"
                Resource: "arn:aws:cloudformation:us-east-1:aws:transform/Serverless-2016-10-31"
              - Sid: ExecuteCloudFormation
                Effect: "Allow"
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:ListStackResources
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                  - cloudformation:UpdateTerminationProtection
                  - cloudformation:GetTemplate
                  - cloudformation:GetTemplateSummary
                Resource:
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AppId}-*/*'
              - Sid: ReadLambda
                Effect: Allow
                Action:
                  - lambda:Get*
                  - lambda:List*
                Resource:
                  - '*'
              - Sid: ManageSlsDeploymentBucket
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:PutBucketAcl
                  - s3:GetEncryptionConfiguration
                  - s3:PutEncryptionConfiguration
                Resource:
                  - !Sub "${SplayshAPIDeploymentBucket.Arn}"
                  - !Sub "${SplayshAPIDeploymentBucket.Arn}/*"
              - Sid: ListS3
                Effect: Allow
                Action:
                  - s3:List*
                Resource: '*'

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      Policies:
        - PolicyName: DeployLambdaFunctions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:Get*
                  - lambda:List*
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:UpdateFunctionConfiguration
                  - lambda:UpdateFunctionCode
                  - lambda:PublishVersion
                  - lambda:CreateAlias
                  - lambda:DeleteAlias
                  - lambda:UpdateAlias
                  - lambda:AddPermission
                  - lambda:RemovePermission
                  - lambda:InvokeFunction
                  - lambda:TagResource
                  - lambda:CreateFunctionUrlConfig
                  - lambda:DeleteFunctionUrlConfig
                Resource:
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AppId}-*'
        - PolicyName: DeployLogGroups
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:Get*
                  - logs:Describe*
                  - logs:List*
                  - logs:DeleteLogGroup
                  - logs:PutResourcePolicy
                  - logs:DeleteResourcePolicy
                  - logs:PutRetentionPolicy
                  - logs:DeleteRetentionPolicy
                  - logs:TagLogGroup
                  - logs:UntagLogGroup
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AppId}-*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/http-api/${AppId}-*'
              - Effect: Allow
                Action:
                  - logs:Describe*
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource:
                  - '*'
        - PolicyName: DeployAppBuckets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllBucketPermissions
                Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                Resource: '*'
              - Sid: WriteAppBuckets
                Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:PutEncryptionConfiguration
                Resource:
                  - !Sub 'arn:aws:s3:::${AppId}-*'
        - PolicyName: DeployCloudFront
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudfront:Get*
                  - cloudfront:List*
                  - cloudfront:CreateDistribution
                  - cloudfront:UpdateDistribution
                  - cloudfront:DeleteDistribution
                  - cloudfront:TagResource
                  - cloudfront:UntagResource
                Resource:
                  - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:*/*'
              - Sid: DeployCloudFrontOriginAccessIdentity
                Effect: Allow
                Action:
                  - cloudfront:CreateCloudFrontOriginAccessIdentity
                  - cloudfront:UpdateCloudFrontOriginAccessIdentity
                  - cloudfront:GetCloudFrontOriginAccessIdentity
                  - cloudfront:GetCloudFrontOriginAccessIdentityConfig
                  - cloudfront:DeleteCloudFrontOriginAccessIdentity
                  - cloudfront:ListCloudFrontOriginAccessIdentities
                Resource: '*'
              - Sid: ServerlessTransforms
                Effect: Allow
                Action:
                  - "cloudformation:CreateChangeSet"
                Resource: "arn:aws:cloudformation:us-east-1:aws:transform/Serverless-2016-10-31"
        - PolicyName: DeployLambdaExecutionRoles
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:Get*
                  - iam:List*
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AppId}-*'
        - PolicyName: DeployAPIGateway
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - apigateway:GET
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:PATCH
                  - apigateway:DELETE
                Resource:
                  - !Sub 'arn:aws:apigateway:${AWS::Region}::/apis'
                  - !Sub 'arn:aws:apigateway:${AWS::Region}::/apis/*'
                  - !Sub 'arn:aws:apigateway:${AWS::Region}::/restapis'
                  - !Sub 'arn:aws:apigateway:${AWS::Region}::/restapis/*'
        - PolicyName: DeployEventBridge
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:Describe*
                  - events:Get*
                  - events:List*
                  - events:CreateEventBus
                  - events:DeleteEventBus
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - events:TagResource
                  - events:UntagResource
                Resource:
                  - !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${AppId}-*'
                  - !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/${AppId}-*'
        - PolicyName: DeploySNSTopics
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Get*
                  - sns:Describe*
                  - sns:CreateTopic
                  - sns:DeleteTopic
                  - sns:SetTopicAttributes
                  - sns:Subscribe
                  - sns:Unsubscribe
                  - sns:TagResource
                Resource:
                  - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AppId}-*'
        - PolicyName: DeployDynamoDB
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:CreateTableReplica
                  - dynamodb:CreateGlobalTable
                  - dynamodb:DeleteTable
                  - dynamodb:DeleteGlobalTable
                  - dynamodb:DeleteTableReplica
                  - dynamodb:Describe*
                  - dynamodb:List*
                  - dynamodb:Get*
                  - dynamodb:TagResource
                  - dynamodb:UntagResource
                  - dynamodb:UpdateContinuousBackups
                  - dynamodb:UpdateGlobalTable
                  - dynamodb:UpdateGlobalTableSettings
                  - dynamodb:UpdateTable
                  - dynamodb:UpdateTableReplicaAutoScaling
                  - dynamodb:UpdateTimeToLive
                Resource:
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AppId}-*'
                  - !Sub 'arn:aws:dynamodb::${AWS::AccountId}:global-table/${AppId}-*'
        - PolicyName: DeploySQS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:SetQueueAttributes
                  - sqs:AddPermission
                  - sqs:RemovePermission
                  - sqs:TagQueue
                  - sqs:UntagQueue
                  - sqs:Get*
                  - sqs:List*
                Resource:
                  - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AppId}-*'
        - PolicyName: DeploySSMParameterStore
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter*
                  - ssm:DescribeParameters
                  - ssm:DeleteParameter*
                  - ssm:PutParameter
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AppId}'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AppId}/*'

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

  SplayshAPIDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AppId}-deployment-bucket'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled  # Optional: Enables versioning for objects in the bucket

Outputs:
  DeployerRole:
    Value: !GetAtt DeployerRole.Arn
  SplayshAPIDeploymentBucket:
    Value: !GetAtt SplayshAPIDeploymentBucket.Arn